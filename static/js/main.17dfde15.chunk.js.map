{"version":3,"sources":["components/header/header.tsx","data/blogList.tsx","pages/main/main.tsx","pages/list/list.tsx","pages/detail/detail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","history","useHistory","className","onClick","push","BlogList","title","description","Main","blogList","map","blog","i","style","backgroundColor","Math","round","random","List","Detail","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAIaA,EAAS,WACpB,IAAMC,EAAUC,cAEhB,OACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,qCACVC,QAAS,WACPH,EAAQI,KAAK,SAFpB,6CAMA,qBAAKF,UAAU,iBACVC,QAAS,WACPH,EAAQI,KAAK,SAFpB,6D,OCoBSC,EAnCE,CACf,CACEC,MAAQ,2DACRC,YAAW,kEAEb,CACED,MAAQ,uCACRC,YAAW,kEAEb,CACED,MAAQ,2BACRC,YAAW,kEAEb,CACED,MAAQ,aACRC,YAAW,kEAEb,CACED,MAAQ,2BACRC,YAAW,kEAEb,CACED,MAAQ,6CACRC,YAAW,kEAEb,CACED,MAAQ,2BACRC,YAAW,kEAEb,CACED,MAAQ,2BACRC,YAAW,mECvBFC,EAAO,WAClB,IAAMR,EAAUC,cAChB,OAAO,sBAAKC,UAAU,YAAf,UACL,sBAAKA,UAAU,eAAf,UACE,iEACA,kFAEF,qBAAKA,UAAU,iBAAf,SAEIO,EAASC,KAAI,SAACC,EAAMC,GAClB,OAAO,sBAAKV,UAAU,iBACVW,MAAQ,CACNC,gBAAiB,IAfhCC,KAAKC,MAAsB,IAAhBD,KAAKE,WAiBHd,QAAU,WACRH,EAAQI,KAAK,WALpB,UAQL,+BAAQQ,IACR,+BAAQD,EAAKL,oBCpBZY,EAAO,WAClB,OAAO,sBAAKhB,UAAU,YAAf,UACL,sBAAKA,UAAU,eAAf,UACE,oDACA,kFAEF,qBAAKA,UAAU,iBAAf,SAEIO,EAASC,KAAI,SAACC,EAAMC,GAClB,OAAO,sBAAKV,UAAU,iBACVW,MAAQ,CACNC,gBAAiB,IAdhCC,KAAKC,MAAsB,IAAhBD,KAAKE,WAYR,UAKL,+BAAQL,IACR,+BAAQD,EAAKL,oBCpBZa,EAAS,WACpB,OACE,sBAAKjB,UAAU,mBAAf,m+BAGE,uBAHF,68BAKE,uBALF,68BAOE,uBAPF,68BASE,uBATF,68BAWE,uBAXF,68BAaE,uBAbF,68BAeE,uBAfF,68BAiBE,uBAjBF,i9BC6BWkB,MAzBf,WAEE,OAEE,qBAAKlB,UAAU,gBAAf,SACG,eAAC,IAAD,CAAemB,SAAS,SAAxB,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAO,IAAMC,OAAQ,EAA5B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAO,QAAUC,OAAQ,EAAhC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAO,QAAUC,OAAQ,EAAhC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAO,UAAYC,OAAQ,EAAlC,SACE,cAAC,EAAD,YCXIC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.17dfde15.chunk.js","sourcesContent":["import React, {ReactElement} from 'react';\nimport { useHistory } from \"react-router-dom\";\n\n\nexport const Header = ():ReactElement => {\n  const history = useHistory();\n  \n  return (\n    <div className=\"header-container\">\n      <div className=\"header-wrapper header-home-wrapper\"\n           onClick={()=>{\n             history.push('main');\n           }}>\n        형욱 블로그\n      </div>\n      <div className=\"header-wrapper\"\n           onClick={()=>{\n             history.push('list');\n           }}>\n        게시글 보러가기\n      </div>\n    </div>\n  )\n}\n\n// export default BlogDetail","const BlogList = [\n  {\n    title : '첫번째 블로그입니다.',\n    description :`typescript에 대한 내용입니다. `,\n  },\n  {\n    title : '빅인사이트란',\n    description :`typescript에 대한 내용입니다. `,\n  },\n  {\n    title : '구글이란',\n    description :`typescript에 대한 내용입니다. `,\n  },\n  {\n    title : 'HTTP란',\n    description :`typescript에 대한 내용입니다. `,\n  },\n  {\n    title : '햄버거란',\n    description :`typescript에 대한 내용입니다. `,\n  },\n  {\n    title : '아인슈타인이란',\n    description :`typescript에 대한 내용입니다. `,\n  },\n  {\n    title : '나루토란',\n    description :`typescript에 대한 내용입니다. `,\n  },\n  {\n    title : '홍삼이란',\n    description :`typescript에 대한 내용입니다. `,\n  },\n]\n\nexport default BlogList;","import React, {ReactElement} from 'react';\nimport blogList from '../../data/blogList'\nimport {useHistory} from \"react-router-dom\";\n\nconst randomColor = (): number => {\n  return Math.round(Math.random() * 1000000);\n}\n\nexport const Main = (): ReactElement => {\n  const history = useHistory();\n  return <div className=\"main-page\">\n    <div className=\"main-wrapper\">\n      <h1>형욱 블로그</h1>\n      <h3>#개발 #프로그래밍</h3>\n    </div>\n    <div className=\"main-blog-list\">\n      {\n        blogList.map((blog, i) => {\n          return <div className=\"main-blog-item\"\n                      style={ {\n                        backgroundColor: '#' + randomColor()\n                      } }\n                      onClick={ () => {\n                        history.push('detail')\n                      } }\n          >\n            <span>{ i }</span>\n            <span>{ blog.title }</span>\n          </div>\n        })\n      }\n    </div>\n  \n  </div>\n}","import React, {ReactElement} from 'react';\nimport blogList from '../../data/blogList'\n\nconst randomColor = (): number=>{\n  return Math.round(Math.random() * 1000000);\n}\n\nexport const List = (): ReactElement => {\n  return <div className=\"main-page\">\n    <div className=\"main-wrapper\">\n      <h1>블로그</h1>\n      <h3>#개발 #프로그래밍</h3>\n    </div>\n    <div className=\"main-blog-list\">\n      {\n        blogList.map((blog, i) => {\n          return <div className=\"main-blog-item\"\n                      style={ {\n                        backgroundColor: '#' + randomColor()\n                      } }\n          >\n            <span>{ i }</span>\n            <span>{ blog.title }</span>\n          </div>\n        })\n      }\n    </div>\n  \n  </div>\n}","import React, {ReactElement} from \"react\";\n\nexport const Detail = (): ReactElement=>{\n  return (\n    <div className=\"detail-container\">\n      하루 중 가장 좋아하는 시간은 사랑하는 사람을 위해 저녁을 준비할 때다. 이전에는 몰랐는데 누군가와 함께 밥을 먹는 시간이 참 소중하고 기쁘게 느껴진다. 요리를 할 때는 오로지 요리에만 집중한다. 한 끼를 즐거운 마음으로 해결할 수 있도록 부엌 위에 온 신경을 쓴다. 매일 먹는 밥인데도 왜 언제나 설레고 기대되는 것일까. 무엇이든 \\u0027밥 먹듯이\\u0027 해내고 싶다는 생각을 요즘 자주 한다.\n      \n      <br/>\n      하루 중 가장 좋아하는 시간은 사랑하는 사람을 위해 저녁을 준비할 때다. 이전에는 몰랐는데 누군가와 함께 밥을 먹는 시간이 참 소중하고 기쁘게 느껴진다. 요리를 할 때는 오로지 요리에만 집중한다. 한 끼를 즐거운 마음으로 해결할 수 있도록 부엌 위에 온 신경을 쓴다. 매일 먹는 밥인데도 왜 언제나 설레고 기대되는 것일까. 무엇이든 '밥 먹듯이' 해내고 싶다는 생각을 요즘 자주 한다.\n      <br/>\n      하루 중 가장 좋아하는 시간은 사랑하는 사람을 위해 저녁을 준비할 때다. 이전에는 몰랐는데 누군가와 함께 밥을 먹는 시간이 참 소중하고 기쁘게 느껴진다. 요리를 할 때는 오로지 요리에만 집중한다. 한 끼를 즐거운 마음으로 해결할 수 있도록 부엌 위에 온 신경을 쓴다. 매일 먹는 밥인데도 왜 언제나 설레고 기대되는 것일까. 무엇이든 '밥 먹듯이' 해내고 싶다는 생각을 요즘 자주 한다.\n      <br/>\n      하루 중 가장 좋아하는 시간은 사랑하는 사람을 위해 저녁을 준비할 때다. 이전에는 몰랐는데 누군가와 함께 밥을 먹는 시간이 참 소중하고 기쁘게 느껴진다. 요리를 할 때는 오로지 요리에만 집중한다. 한 끼를 즐거운 마음으로 해결할 수 있도록 부엌 위에 온 신경을 쓴다. 매일 먹는 밥인데도 왜 언제나 설레고 기대되는 것일까. 무엇이든 '밥 먹듯이' 해내고 싶다는 생각을 요즘 자주 한다.\n      <br/>\n      하루 중 가장 좋아하는 시간은 사랑하는 사람을 위해 저녁을 준비할 때다. 이전에는 몰랐는데 누군가와 함께 밥을 먹는 시간이 참 소중하고 기쁘게 느껴진다. 요리를 할 때는 오로지 요리에만 집중한다. 한 끼를 즐거운 마음으로 해결할 수 있도록 부엌 위에 온 신경을 쓴다. 매일 먹는 밥인데도 왜 언제나 설레고 기대되는 것일까. 무엇이든 '밥 먹듯이' 해내고 싶다는 생각을 요즘 자주 한다.\n      <br/>\n      하루 중 가장 좋아하는 시간은 사랑하는 사람을 위해 저녁을 준비할 때다. 이전에는 몰랐는데 누군가와 함께 밥을 먹는 시간이 참 소중하고 기쁘게 느껴진다. 요리를 할 때는 오로지 요리에만 집중한다. 한 끼를 즐거운 마음으로 해결할 수 있도록 부엌 위에 온 신경을 쓴다. 매일 먹는 밥인데도 왜 언제나 설레고 기대되는 것일까. 무엇이든 '밥 먹듯이' 해내고 싶다는 생각을 요즘 자주 한다.\n      <br/>\n      하루 중 가장 좋아하는 시간은 사랑하는 사람을 위해 저녁을 준비할 때다. 이전에는 몰랐는데 누군가와 함께 밥을 먹는 시간이 참 소중하고 기쁘게 느껴진다. 요리를 할 때는 오로지 요리에만 집중한다. 한 끼를 즐거운 마음으로 해결할 수 있도록 부엌 위에 온 신경을 쓴다. 매일 먹는 밥인데도 왜 언제나 설레고 기대되는 것일까. 무엇이든 '밥 먹듯이' 해내고 싶다는 생각을 요즘 자주 한다.\n      <br/>\n      하루 중 가장 좋아하는 시간은 사랑하는 사람을 위해 저녁을 준비할 때다. 이전에는 몰랐는데 누군가와 함께 밥을 먹는 시간이 참 소중하고 기쁘게 느껴진다. 요리를 할 때는 오로지 요리에만 집중한다. 한 끼를 즐거운 마음으로 해결할 수 있도록 부엌 위에 온 신경을 쓴다. 매일 먹는 밥인데도 왜 언제나 설레고 기대되는 것일까. 무엇이든 '밥 먹듯이' 해내고 싶다는 생각을 요즘 자주 한다.\n      <br/>\n      하루 중 가장 좋아하는 시간은 사랑하는 사람을 위해 저녁을 준비할 때다. 이전에는 몰랐는데 누군가와 함께 밥을 먹는 시간이 참 소중하고 기쁘게 느껴진다. 요리를 할 때는 오로지 요리에만 집중한다. 한 끼를 즐거운 마음으로 해결할 수 있도록 부엌 위에 온 신경을 쓴다. 매일 먹는 밥인데도 왜 언제나 설레고 기대되는 것일까. 무엇이든 '밥 먹듯이' 해내고 싶다는 생각을 요즘 자주 한다.\n    </div>\n  )\n}","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/header/header\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {Main} from \"./pages/main/main\";\nimport {List} from \"./pages/list/list\";\nimport {Detail} from \"./pages/detail/detail\";\n\nfunction App() {\n  \n  return (\n    \n    <div className=\"app-container\">\n       <BrowserRouter basename=\"iamman\">\n         <Header/>\n         <Route path={ \"/\" } exact={ true }>\n           <Main/>\n         </Route>\n         <Route path={ \"/main\" } exact={ true }>\n           <Main/>\n         </Route>\n         <Route path={ \"/list\" } exact={ true }>\n           <List/>\n         </Route>\n         <Route path={ \"/detail\" } exact={ true }>\n           <Detail/>\n         </Route>\n       </BrowserRouter>\n    </div>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}