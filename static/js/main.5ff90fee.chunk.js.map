{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","widthUnitPerPattern","setWidthUnitPerPattern","heightUnitPerPattern","setHeightUnitPerPattern","totalWidthPatternCount","setTotalWidthPatternCount","totalHeightPatternCount","setTotalHeightPatternCount","totalWidthPatternLength","setTotalWidthPatternLength","totalHeightPatternLength","setTotalHeightPatternLength","isCalculation","setIsCalculation","className","style","background","width","height","value","onChange","e","Number","parseInt","target","display","justifyContent","alignItems","cursor","fontSize","onClick","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ff90fee.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport './App.css';\n\nfunction App() {\n\n  // 가로 1무늬 코\n  const [widthUnitPerPattern, setWidthUnitPerPattern] = useState(0);\n  // 세로 1무늬 단\n  const [heightUnitPerPattern, setHeightUnitPerPattern] = useState(0);\n\n  // 총 가로 무늬 갯수\n  const [totalWidthPatternCount, setTotalWidthPatternCount] = useState(0);\n  // 총 가로 무늬 길이\n  const [totalHeightPatternCount, setTotalHeightPatternCount] = useState(0);\n\n  // 총 세로 무늬 갯수\n  const [totalWidthPatternLength, setTotalWidthPatternLength] = useState(0);\n  // 총 세로 무늬 길이\n  const [totalHeightPatternLength, setTotalHeightPatternLength] = useState(0);\n\n  const [isCalculation, setIsCalculation] = useState(true);\n\n\n  return (\n      <div className=\"App\" style={{\n        background: \"#ffff00\",\n        width: \"100vw\",\n        height: \"100vh\"\n      }}>\n\n        {\n            isCalculation &&\n            <div>\n              <h1>기본 무늬</h1>\n              <span>가로 1무늬</span>\n              <input value={widthUnitPerPattern} onChange={(e) => {\n                setWidthUnitPerPattern(Number.parseInt(e.target.value));\n              }\n              }/>코\n              <br/>\n              <span>세로 1무늬</span>\n              <input value={heightUnitPerPattern} onChange={(e) => {\n                setHeightUnitPerPattern(Number.parseInt(e.target.value));\n              }\n              }/>단\n\n              <br/>\n              <h1>치수 입력</h1>\n              <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n                <div>\n                  <span>가로</span>\n                </div>\n                <div>\n                  <input value={totalWidthPatternCount} onChange={(e) => {\n                    setTotalWidthPatternCount(Number.parseInt(e.target.value));\n                  }\n                  }/> 무늬\n                  <br/>\n                  <input value={totalWidthPatternLength} onChange={(e) => {\n                    setTotalWidthPatternLength(Number.parseInt(e.target.value));\n                  }\n                  }/> cm\n                  <br/>\n                </div>\n              </div>\n\n              <br/><br/>\n\n              <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n                <div>\n                  <span>세로</span>\n                </div>\n                <div>\n                  <input value={totalHeightPatternCount} onChange={(e) => {\n                    setTotalHeightPatternCount(Number.parseInt(e.target.value));\n                  }\n                  }/> 무늬\n                  <br/>\n                  <input value={totalHeightPatternLength} onChange={(e) => {\n                    setTotalHeightPatternLength(Number.parseInt(e.target.value));\n                  }\n                  }/> cm\n                  <br/>\n                </div>\n              </div>\n\n              <div\n                  style={{\n                    cursor: \"pointer\",\n                    background : \"#ff0000\",\n                    width : \"300px\",\n                    height : \"100px\",\n                    fontSize: \"30px\"\n                  }}\n                  onClick={(e) => {\n                    setIsCalculation(!isCalculation)\n                  }}> 계산하기\n              </div>\n\n            </div>\n        }\n\n        {\n            !isCalculation && <div>\n              <h1>게이지</h1>\n              <h2>10cm2</h2>\n              <span>가로 1무늬</span>\n              <span style={{color : \"#ff0000\", fontSize : \"20px\"}}>{(widthUnitPerPattern * totalWidthPatternCount * 10) / totalWidthPatternLength}</span>\n              <span>코</span>\n              <br/>\n              <span>세로 1무늬</span>\n              <span style={{color : \"#ff0000\", fontSize : \"20px\"}}>{(heightUnitPerPattern * totalHeightPatternCount * 10) / totalHeightPatternLength}</span>\n              <span>단</span>\n              <br/>\n\n              <h2>한무늬</h2>\n              <span>가로 1무늬</span>\n              <span style={{color : \"#ff0000\", fontSize : \"20px\"}}>{(totalWidthPatternLength) / totalWidthPatternCount}</span>\n              <span>코</span>\n              <br/>\n              <span>세로 1무늬</span>\n              <span style={{color : \"#ff0000\", fontSize : \"20px\"}}>{(totalHeightPatternLength) / totalHeightPatternCount}</span>\n              <span>단</span>\n              <br/>\n\n\n              <div\n                  style={{\n                    cursor: \"pointer\",\n                    background : \"#ff0000\",\n                    width : \"300px\",\n                    height : \"100px\",\n                    fontSize: \"30px\"\n                  }}\n                  onClick={(e) => {\n                    setIsCalculation(!isCalculation)\n                  }}> 돌아가기\n              </div>\n            </div>\n\n\n        }\n      </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}