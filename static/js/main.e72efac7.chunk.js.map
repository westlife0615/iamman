{"version":3,"sources":["components/header/header.tsx","components/side-nav/SideNav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["headerNavFontStyle","fontSize","color","headerNavViewStyle","padding","cursor","Header","style","display","justifyContent","to","SideNav","props","useState","index","setIndex","className","width","height","position","navigationGroupList","map","content","i","onClick","text","children","component","INITIAL_NAV_GROUP_LIST","src","App","basename","Fragment","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAUMA,EAAqB,CACvBC,SAAU,OACVC,MAAO,WAGLC,EAAqB,CACvBC,QAAS,OACTC,OAAQ,WAGCC,EAAmB,WAC5B,OACI,qBAAKC,MAAO,CACRC,QAAS,OACTC,eAAgB,UAFpB,SAII,cAAC,IAAD,CAASC,GAAI,IAAb,SACI,qBAAKH,MAAK,2BAAMP,GAAuBG,GAAvC,yB,eC+BDQ,EA7CC,SAACC,GAAyB,IAAD,EAEXC,mBAAS,GAFE,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAerC,OACI,mBAAKR,MAAO,CACRC,QAAS,OACTC,eAAgB,eAEhB,mBAAKO,UAAW,qBACXT,MAAK,2BAbO,CACrBU,MAAO,QACPC,OAAQ,QACRC,SAAU,WACVf,QAAS,SARY,CACrBH,SAAU,OACVC,MAAO,aAiBK,uBAEQU,EAAMQ,oBAAoBC,KAAI,SAACC,EAA0BC,GACrD,OAAO,mBAAKhB,MAAO,CAACH,QAAS,OAAQC,OAAQ,WAAYmB,QAAS,WAC9DT,EAASQ,KAET,wBAAOD,EAAQG,YAOvC,mBAAKT,UAAW,iBAAkBT,MAAO,CAACU,MAAO,SAC5CL,EAAMc,SACNd,EAAMQ,oBAAoBN,GAAOa,aCxCrCC,EAA4C,CACrD,CACIH,KAAM,wCACNE,UAAW,8BAAK,qBACZE,IAAK,gGACLtB,MAAO,CAACU,MAAO,OAAQC,OAAQ,aAEvC,CACIO,KAAM,kCACNE,UAAW,8BAAK,qBAAKE,IAAK,yEACLtB,MAAO,CAACU,MAAO,OAAQC,OAAQ,aAExD,CACIO,KAAM,qBACNE,UAAW,8BAAK,qBAAKE,IAAK,qFACLtB,MAAO,CAACU,MAAO,OAAQC,OAAQ,cAoC7CY,MAhCf,WACI,IAAIV,EAAyCQ,EAE7C,OACI,cAAC,IAAD,CAAeG,SAAU,UAAzB,SACI,cAAC,IAAMC,SAAP,UACI,eAAC,EAAD,CAASZ,oBAAqBA,EAA9B,UACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOa,KAAM,IAAKC,OAAO,YCxB9BC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e72efac7.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nconst mystyle = {\n    color: \"black\",\n    backgroundColor: \"white\",\n    padding: \"10px\",\n    fontFamily: \"Arial\"\n};\n\nconst headerNavFontStyle = {\n    fontSize: \"40px\",\n    color: \"#ff00ff\"\n};\n\nconst headerNavViewStyle = {\n    padding: \"10px\",\n    cursor: \"pointer\"\n};\n\nexport const Header: React.FC = ()=>{\n    return (\n        <div style={{\n            display: \"flex\",\n            justifyContent: \"center\"\n        }}>\n            <NavLink to={\"/\"}>\n                <div style={{...headerNavFontStyle, ...headerNavViewStyle}}>홈</div>\n            </NavLink>\n            {/*<NavLink to={\"/login\"}>*/}\n            {/*    <div style={{...headerNavFontStyle, ...headerNavViewStyle}}>로그인</div>*/}\n            {/*</NavLink>*/}\n        </div>\n    )\n}\n\n// export default BlogDetail","import React, {useState} from \"react\";\nimport {NavigationGroup} from \"../../App\";\n\n\n/** @jsxRuntime classic /\n /* @jsx jsx */\nimport {css, jsx} from \"@emotion/react\";\n\nexport interface SideNavProps {\n    navigationGroupList: NavigationGroup[],\n    children: JSX.Element[] | JSX.Element\n}\n\nconst SideNav = (props: SideNavProps) => {\n\n    const [index, setIndex] = useState(0 as number);\n\n    const sideNavFontStyle = {\n        fontSize: \"40px\",\n        color: \"#0000ff\"\n    };\n    const sideNavViewStyle = {\n        width: \"400px\",\n        height: \"100vh\",\n        position: \"relative\",\n        padding: '30px'\n    } as React.CSSProperties;\n\n    return (\n        <div style={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n        }}>\n            <div className={\"side-nav-container\"}\n                 style={{...sideNavViewStyle, ...sideNavFontStyle}}>\n                {\n                    <div>\n                        {\n                            props.navigationGroupList.map((content: NavigationGroup, i) => {\n                                return <div style={{padding: \"10px\", cursor: \"pointer\"}} onClick={() => {\n                                    setIndex(i);\n                                }}>\n                                    <span>{content.text}</span>\n                                </div>\n                            })\n                        }\n                    </div>\n                }\n            </div>\n            <div className={\"main-container\"} style={{width: \"100%\"}}>\n                {props.children}\n                {props.navigationGroupList[index].component}\n            </div>\n\n        </div>\n    )\n}\n\nexport default SideNav;","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport './App.css';\nimport {Header} from \"./components/header/header\";\nimport SideNav from \"./components/side-nav/SideNav\";\n\nexport type NavigationGroup = {\n    text: string,\n    component: JSX.Element\n}\n\nexport const INITIAL_NAV_GROUP_LIST: NavigationGroup[] = [\n    {\n        text: \"게시글 리스트\",\n        component: <div><img\n            src={\"https://img.huffingtonpost.com/asset/5d708e2f2400004f0075b4e8.jpeg?ops=scalefit_630_noupscale\"}\n            style={{width: \"100%\", height: 'auto'}}/></div>\n    },\n    {\n        text: \"상세 페이지\",\n        component: <div><img src={\"http://ojsfile.ohmynews.com/STD_IMG_FILE/2011/0525/IE001309768_STD.jpg\"}\n                             style={{width: \"100%\", height: 'auto'}}/></div>\n    },\n    {\n        text: \"글쓰기\",\n        component: <div><img src={\"https://www.chrischae.kr/content/images/size/w2000/2019/12/SteveJobsCloseUp-2.jpeg\"}\n                             style={{width: \"100%\", height: 'auto'}}/></div>\n    },\n]\n\nfunction App() {\n    let navigationGroupList: NavigationGroup[] = INITIAL_NAV_GROUP_LIST;\n\n    return (\n        <BrowserRouter basename={\"/iamman\"}>\n            <React.Fragment>\n                <SideNav navigationGroupList={navigationGroupList}>\n                    <Header/>\n                    <Route path={\"/\"} exact={true}>\n\n                    </Route>\n                    {/*<Route path={\"/login\"} exact={true}>*/}\n                    {/*    <React.Fragment>*/}\n                    {/*        <div style={{margin: \"20px\"}}>*/}\n                    {/*            <input type={\"text\"} placeholder={\"이메일을 입력하세요.\"} style={{width: '90%', height: '30px', fontSize: '20px'}}/>*/}\n                    {/*        </div>*/}\n                    {/*        <div style={{margin: \"20px\"}}>*/}\n                    {/*            <input type={\"password\"} placeholder={\"비밀번호를 입력하요.\"} style={{width: '90%', height: '30px', fontSize: '20px'}}/>*/}\n                    {/*        </div>*/}\n                    {/*        <div style={{margin: \"20px\"}}>*/}\n                    {/*            <button>로그인</button>*/}\n                    {/*        </div>*/}\n\n                    {/*    </React.Fragment>*/}\n                    {/*</Route>*/}\n                </SideNav>\n            </React.Fragment>\n\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}